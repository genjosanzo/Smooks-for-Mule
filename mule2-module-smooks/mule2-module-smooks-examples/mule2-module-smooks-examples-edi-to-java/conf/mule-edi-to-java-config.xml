<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesource.org/schema/mule/core/2.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:spring="http://www.springframework.org/schema/beans"
       xmlns:vm="http://www.mulesource.org/schema/mule/vm/2.0"
       xmlns:stdio="http://www.mulesource.org/schema/mule/stdio/2.0"
       xmlns:file="http://www.mulesource.org/schema/mule/file/2.0"
    xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.mulesource.org/schema/mule/core/2.0 http://www.mulesource.org/schema/mule/core/2.0/mule.xsd
       http://www.mulesource.org/schema/mule/vm/2.0 http://www.mulesource.org/schema/mule/vm/2.0/mule-vm.xsd
       http://www.mulesource.org/schema/mule/stdio/2.0 http://www.mulesource.org/schema/mule/stdio/2.0/mule-stdio.xsd
       http://www.mulesource.org/schema/mule/file/2.0 http://www.mulesource.org/schema/mule/file/2.0/mule-file.xsd
       ">


    <description>
        This example demonstrates invoking a Groovy script as the service component.
    </description>

	<custom-transformer name="EDIOrderToJavaOrder" class="org.milyn.smooks.mule.SmooksTransformer">
		<spring:property name="smooksConfigFile" value="/transforms/smooks-edi-to-java-config.xml" />
		<spring:property name="resultType" value="JAVA"/>
		<spring:property name="javaResultBeanId" value="order"/>
		<spring:property name="reportPath" value="target/smooks-report/report.html" />
	</custom-transformer>

    <model name="OrderProcessorModel">
        <service name="OrderProcessorService">
            <inbound>
                <file:inbound-endpoint
                	path="./data/in"
                	pollingFrequency="1000"
                	moveToDirectory="./data/out"
                	transformer-refs="EDIOrderToJavaOrder"
                >
                	<file:filename-wildcard-filter pattern="*.edi"/>
                </file:inbound-endpoint>

                <!-- For unit-test -->
                <vm:inbound-endpoint path="EDIOrderToJavaOrder" transformer-refs="EDIOrderToJavaOrder" />

            </inbound>
            <outbound>
            	<outbound-pass-through-router>
            		<stdio:outbound-endpoint system="OUT" />
            	</outbound-pass-through-router>
            </outbound>
        </service>
    </model>
</mule>
