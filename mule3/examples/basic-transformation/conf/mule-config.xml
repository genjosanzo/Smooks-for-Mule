<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:stdio="http://www.mulesoft.org/schema/mule/stdio"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	  xmlns:smooks="http://www.muleforge.org/smooks/schema/mule-module-smooks"
      xmlns:file="http://www.mulesoft.org/schema/mule/file"
      xsi:schemaLocation="
        http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.1/mule.xsd
        http://www.mulesoft.org/schema/mule/stdio http://www.mulesoft.org/schema/mule/stdio/3.1/mule-stdio.xsd
        http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/3.1/mule-file.xsd
        http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/3.1/mule-vm.xsd
		http://www.muleforge.org/smooks/schema/mule-module-smooks http://dist.muleforge.org/smooks/schema/mule-module-smooks/1.3/mule-module-smooks.xsd"
>
    <description>
        This example demonstrates transforming an XML message with the Smooks Transformer
    </description>

	<!--
		Defines the Mule transformer

 		configFile: Defines where the Smooks configuration is located
      	resultType: Defines which result type is required. STRING is the default value.
                	This property is just here for the illustration because it is
                	so important in case when you need a different result type.
 		reportPath:	Defines that a execution report needs to be written.
      				Take a look at the Smooks report. It shows how Smooks processes the
      				message.
      				Warning: Don't set this in a production environment. It costs a lot
      				of performance!

 	-->
	<smooks:transformer
		name="BasicXSLTTransformation"
		configFile="/transforms/smooks-config.xml"
		resultType="STRING"
		reportPath="target/smooks-report/report.html"
	/>

    <model name="BasicModel">
        <service name="BasicService">
            <inbound>
                <file:inbound-endpoint
                	path="./data/in"
                	pollingFrequency="1000"
                	moveToDirectory="./data/out"
                	transformer-refs="BasicXSLTTransformation"
                >
                	<file:filename-wildcard-filter pattern="*.xml"/>
                </file:inbound-endpoint>

                <!-- For unit-test -->
                <vm:inbound-endpoint path="BasicProcessor" transformer-refs="BasicXSLTTransformation" exchange-pattern="request-response" />

            </inbound>
            <outbound>
            	<pass-through-router>
            		<stdio:outbound-endpoint system="OUT" exchange-pattern="request-response" />
            	</pass-through-router>
            </outbound>
        </service>
    </model>
</mule>
